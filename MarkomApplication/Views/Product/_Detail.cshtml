@model Markom.ViewModel.ProductViewModel

@Scripts.Render("~/bundles/jqueryval")



@using (Html.BeginForm("Edit", "Role", FormMethod.Post, new { id = "form-edit", name = "form-edit" }))
{
    @Html.AntiForgeryToken()
    <style>
        .form-control {
            display: inline
        }
    </style>

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        <div class="form-group">
            <div class="col-md-offset-1">
                * Product Code
                @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-1">
                * Product Name
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

            </div>
            <div class="col-md-offset-3">
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger " })
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-offset-1">
                 Description
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            </div>
            <div class="col-md-offset-3">
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>

        </div>





        <div class="form-group">
            <div class="col-md-offset-8">

                <button type="button" class="btn btn-warning btn-batal">Close</button>

            </div>
        </div>
    </div>
}


<script type="text/javascript">



    $(".btn-batal").on("click", function () {
        $(".modal").modal("hide");

    });
</script>





